apiVersion: unfurl/v1alpha1
kind: Ensemble
# the context will be merged with the corresponding context in the project config:
context:
  inputs:
  # local and secret are special cases that must be defined in the local config
  local:
   schemas:
     name1:
       type: string
       default
  secret:
   schemas:
     name1:
       type: string
       default
  environment:
  runtime:
  external:
    name: # manifest to represent as a resource
      file:
      repository:
      instance: name or "*" # default is root
      schemas: # expected JSON schema for attributes

spec:
  service_template:
    # <tosca service template>
  instances:
    name:
      template:
      implementations:
        action: implementationName
  implementations:
    name1:
      className
      version
      operation
      inputs:
status:
  topology: repo:topology_template:revision
  inputs:
  outputs:
  readyState: #, etc.
  instances:
    name: # root resource is always named "root"
      template: repo:templateName:revision
      attributes:
        .interfaces:
          interfaceName: foo.bar.ClassName
      capabilities:
        - name:
          attributes:
          operatingStatus
          lastChange: changeId
      requirements:
       - name:
         operatingStatus
         lastChange
      readyState:
        effective:
        local:
        lastConfigChange: changeId
        lastStateChange: changeId
      priority
    resources:
      child1:
        # ...
changeLog: changes.yaml
lastJob:
  changeId: 1
  previousId:
  startCommit:
  startTime:
  specDigest:
  lastChangeId:
  readyState:
    effective: error
    local: ok
