#cloud phase is run hosts can't be found (requires cmdline switch)
#bootstrap phase is run if gitterop configmap isn't found but there is access to control-plane hosts (requires cmdline switch)
#user phase (default) is run if gitterop configmap is found
#once deployed components can't be deleted or renamed, to delete mark as uninstall, to rename use aliases

#connection types: cloud, hosts, kubectrl
version: '0.1'
componentSpecs:
  deploy-kms-dns:
    type: ansible
    actions:
      install: deploy-kms-dns-certs.yaml
      uninstall: deploy-kms-dns-certs.yaml
      #update:
      #configchanged:
      #test:
    onfailure: update, re-create, retry, skip
    #timeout ?
    phase: cloud
    #cluster requirements (e.g. version, distribution, feature flags)
    #requires:
    #provides:
    connection: cloud #implied if missing
    parameters:
      - name: my_param
        type: enum
        enum: ['X', 'Y', 'Z']
        required: True
        default:
          clusterkms: name
      zone: required
      region: us-east1
  buildcloud:
    playbook: aws-reference/instructure.yaml
    parameters:
      region: us-east1
      ami: a3333i
      keypair: required
    phase: cloud
  #specs can't change, need to add new ones and update references if upgrade is wanted
  buildcloud-v2:
    playbook: aws-reference/instructure.yaml
    #source hash can change if differences are semantically minor
    #if commit id omitted from src it is added by gitterop
    src: "git@github.com:onecommons/openshift-ansible.git#552617f6bc08e37b066c3392e6de12c92cc0c547"
    #semantic-tag: true (opt-in to allow version tags instead of commit ids)
    parameters:
      region: us-east1
      ami: a3333i
      keypair: required
    phase: cloud
  etcd:
    playbook: openshift-etcd/private/config.yml
    phase: bootstrap
  default-registry:
    playbook: openshift-master/private/registry.yml
    namespace: default
  openshift-acme-cluster-wide:
    #apply diffs with last-applied-configuration annotation and only applies those diffs
    #parse file and add commit id annotation?
    #update last-applied-configuration
    apply: deploy/letsencrypt-live/cluster-wide
    src: https://github.com/tnozicka/openshift-acme.git
    namespace: openshift-acme
  openshift-acme-annotations:
    cmds:
      - adm policy add-cluster-role-to-user openshift-acme -z openshift-acme
# https://github.com/kubernetes/helm/blob/master/docs/rbac.md
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRoleBinding
# metadata:
#   name: tiller
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: cluster-admin
# subjects:
#   - kind: ServiceAccount
#     name: tiller
#     namespace: kube-system
      - annotate -n logging route logging-kibana kubernetes.io/tls-acme=true #(had to delete caCertificate)
      - annotate -n openshift-infra route hawkular-metrics kubernetes.io/tls-acme=true
clusterTemplates:
  base:
    components:
      - etcd #equivalent to name: etcd
      - name: default-registry #if spec is omitted find componentSpec that matches the name
  awsCloud:
    cloudProvider: aws #XXX use for inventory: "./aws.py" and to figure out local connection
    #clusterkms: default: aks
    clusterTemplates: base
    #XXX params that apply to all components?? seems dangerous name clashes!
    #parameters:
    #  named-certs: "lookup('clusterkms', 'namedcerts')"
    components:
      - name: step1
        spec: deploy-kms-dns
      - name: step2
        spec: buildcloud
        parameters:
          ami: a3333i
          keypair:
            clusterkms: useast1pem
clusters:
  #cf kind: Config https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/
  cloud3: #key is cluster-id
      clusterTemplates:
        - awsCloud
        - production
      # overrides and additions from clusterSpec
      components:
        - name: awsCloud.step1:
          parameters:
            zone: cloud3.onecommons.net
        - name: awsCloud.step2:
          parameters:
            master-count: 1
        - name: production.default-registry: #override clusterSpec
          action: uninstall
      #added by giterop
      status:
        actions:
          - component: production.default-registry
            actionId: 3333
            appliedWith: commitid
            action: install / uninstall / update
            status: success | failure | pending | started | timeout
            #result:
            date: date
          - remediation: 3333
            actionId: 4444
            appliedWith: commitid
            action: ignore
            status: success
            date: date
        last-success: commitid
        last-attempt: commitid
      remediation:
        - actionId: 3333
          action: ignore
