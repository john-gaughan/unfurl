.master_on_push: &master_on_push
  - if: '($CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "push") && $CI_COMMIT_REF_NAME == "ci"'
    when: on_success

.on_tag: &on_tag
  - if: '($CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "push") && [ -z $CI_COMMIT_TAG ] && [ $CI_COMMIT_TAG -ne ""]'
    when: on_success


.set_up_cluster: &set_up_cluster
  - k3d cluster create
  - kubectl get node
  - k3d kubeconfig merge --all -d
  - kubectl config view

stages:
  - test
  - build
  - release

variables:
    GIT_SUBMODULE_STRATEGY: "recursive"
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    TOX_TESTENV_PASSENV: DOCKER_HOST
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
    LC_ALL: C.UTF-8
    LANG: C.UTF-8
    LC_CTYPE: C.UTF-8

default:
  services:
    - name: docker:19.03.12-dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  image: registry.gitlab.com/onecommons/unfurl-test-docker-image:tf_0.13.6-helm_3.3.4-kubectl_1.17.14-k3d_3.4.0


test_py27:
  rules: *master_on_push
  stage: test
  script:
    - *set_up_cluster
    - tox -e py27  
  tags:
    - kubernetes

test_py36:
  rules: *master_on_push
  stage: test
  script:
    - *set_up_cluster
    - tox -e py36  
  tags:
    - kubernetes


test_py37:
  rules: *master_on_push
  stage: test
  script:
    - *set_up_cluster
    - tox -e py37  
  tags:
    - kubernetes

test_py38:
  rules: *master_on_push
  stage: test
  script:
    - *set_up_cluster
    - tox -e py38 
  tags:
    - kubernetes

test_py39:
  rules: *master_on_push
  stage: test
  script:
    - *set_up_cluster
    - tox -e py39  
  tags:
    - kubernetes


build:
  rules: *master_on_push
  stage: build
  script:
    - 'docker build -t unfurl:${CI_COMMIT_SHA} -f ./docker/Dockerfile .'
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push unfurl:${CI_COMMIT_SHA}
  tags:
      - kubernetes

release:
  rules: *on_tag
  stage: release
  when: on_success
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - 'docker pull unfurl:${CI_COMMIT_SHA}'
    - docker logout $CI_REGISTRY
    - 'docker tag  unfurl:${CI_COMMIT_SHA} unfurl:{CI_COMMIT_TAG}'
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_TOKEN
    - docker push unfurl:${CI_COMMIT_TAG}
  tags:
    - kubernetes